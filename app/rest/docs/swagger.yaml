basePath: /api/v1
definitions:
  rest.CreateEmployeeRequest:
    properties:
      name:
        type: string
    type: object
  rest.Employee:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  rest.HTTPResponse:
    properties:
      msg:
        example: any message
        type: string
    type: object
  rest.IDResponse:
    properties:
      id:
        type: string
    type: object
  rest.SearchEmployeesResponse:
    properties:
      employees:
        items:
          $ref: '#/definitions/rest.Employee'
        type: array
      next_page_token:
        type: string
    type: object
info:
  contact:
    email: contato@coding4u.com.br
    name: Coding4u
  description: Swagger API for Employee Service.
  termsOfService: http://swagger.io/terms/
  title: Employee Swagger API
  version: "1.0"
paths:
  /employees:
    get:
      consumes:
      - application/json
      description: Router for search employees
      operationId: searchEmployees
      parameters:
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: page token
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SearchEmployeesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
      summary: search employees
      tags:
      - Employee
    post:
      consumes:
      - application/json
      description: Router for create a new employee
      operationId: createEmployee
      parameters:
      - description: JSON body for create a new employee
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.CreateEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.IDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
      summary: create a new employee
      tags:
      - Employee
  /employees/{employee_id}:
    get:
      consumes:
      - application/json
      description: Router for find a employee
      operationId: findEmployee
      parameters:
      - description: Employee ID
        in: path
        name: employee_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
      summary: find a employee
      tags:
      - Employee
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
